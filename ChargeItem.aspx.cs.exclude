using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;

public partial class ChargeItem : System.Web.UI.Page
{
    ChargeItemEntity oChargeItemEntity = new ChargeItemEntity();
    ChargeInformationDAO oChargeInformationDAO = new ChargeInformationDAO();
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            gridViewBind();
            //dropDownListBind();
        }
    }

   
    protected void btnBSave_Click(object sender, EventArgs e)
    {
        oChargeItemEntity = new ChargeItemEntity();
        oChargeItemEntity.ChargeDetails = txtChargeName.Text.ToUpper();
        oChargeItemEntity.ChargeCode = txtChargeCode.Text;
        oChargeItemEntity.ChargeAmount =Convert.ToDouble(txtChargeAmount.Text);
        oChargeItemEntity.CApplyLowerLimit =Convert.ToDouble(CApplyLowerLimit.Text);
        oChargeItemEntity.CApplyHigherLimit = Convert.ToDouble(txtCAHigherLImit.Text);
        if (isPercentageCheckBox.Checked)
            oChargeItemEntity.ChargeItemType = 1;
        else
            oChargeItemEntity.ChargeItemType = 0;
        oChargeItemEntity.ChargeRemarks = "";
        oChargeItemEntity.ChargePercentage =Convert.ToDouble(txtChargeParcentage.Text);
        oChargeItemEntity.ChargeCreatedBy = "";// sesseion["userId"] is needed;
        oChargeItemEntity.ChargeLastModifiedBy = "";
        string condition = " where ChargeDetails='" + oChargeItemEntity.ChargeDetails + "'";
        DataTable dt = oChargeInformationDAO.GetChargeItem(condition);
        string message = "";
        if (dt.Rows.Count == 0)
        {
            int i = oChargeInformationDAO.InsertChargeItem(oChargeItemEntity);
            if (i == 1)
            {
                message = "Data Inserted Successfully";
                Clear();
            }
            else
                message = "Data Not Inserted!";

        }
        else
        {
            message = "Branch Alreay in DataBase";
        }
        gridViewBind();
        ScriptManager.RegisterClientScriptBlock(Page, this.GetType(), "MessageBox", "alert('" + message + "')", true);
    }

    private void Clear()
    {
        txtChargeParcentage.Text = "0";
        txtChargeAmount.Text = "0";
        txtCAHigherLImit.Text = "0";
        txtChargeName.Text = "";
        txtChargeCode.Text = "";
        isPercentageCheckBox.Checked = false;
        CApplyLowerLimit.Text = "0";
    }
        
    
    protected void GridView1_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {

        GridView1.PageIndex = e.NewPageIndex;
        gridViewBind();
        //GridView1.DataSource = oCollectionAccount.GetCustomer(Session["brCode"].ToString(), "");
        //GridView1.DataBind();

    }

    protected void GridView1_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
    {

        GridView1.EditIndex = -1;
        gridViewBind();


    }
    protected void GridView1_RowUpdating(object sender, GridViewUpdateEventArgs e)
    {

        ////int customerId = Convert.ToInt32(GridView1.DataKeys[e.RowIndex].Value.ToString());

        ////        //getting row field details
        TextBox ChargeDetailsTextBox = (TextBox)GridView1.Rows[e.RowIndex].FindControl("ChargeDetailsTextBox");
        //TextBox banKIdTextBox = (TextBox)GridView1.Rows[e.RowIndex].FindControl("idTextBox");
        CheckBox isPercentageCheckBoxGrid = (CheckBox)GridView1.Rows[e.RowIndex].FindControl("isPercentageCheckBoxGrid");
        TextBox ChargePercentageTextBox = (TextBox)GridView1.Rows[e.RowIndex].FindControl("ChargePercentageTextBox");
        TextBox ChargeAmountTextBox = (TextBox)GridView1.Rows[e.RowIndex].FindControl("ChargeAmountTextBox");
        TextBox CApplyLowerLimitTextBox = (TextBox)GridView1.Rows[e.RowIndex].FindControl("CApplyLowerLimitTextBox");
        //TextBox ChargeAmountTextBox1 = (TextBox)GridView1.Rows[e.RowIndex].FindControl("ChargeAmountTextBox");
        TextBox CApplyHigherLimitTextBox = (TextBox)GridView1.Rows[e.RowIndex].FindControl("CApplyHigherLimitTextBox");
        //TextBox BranchRemarksTextBox = (TextBox)GridView1.Rows[e.RowIndex].FindControl("BranchRemarksTextBox");
        //Label ChargeCodeNameLabel = (Label)GridView1.Rows[e.RowIndex].FindControl("ChargeCodeNameLabel");
        //oBankInformationEntity = new BankInformationEntity();
        oChargeItemEntity = new ChargeItemEntity();
        oChargeItemEntity.ChargeDetails = ChargeDetailsTextBox.Text.ToUpper();
        //oChargeItemEntity.ChargeCode = txtChargeCode.Text;
        oChargeItemEntity.ChargeID = Convert.ToInt32(GridView1.DataKeys[e.RowIndex].Value.ToString());
        try
        {
            oChargeItemEntity.ChargeAmount = Convert.ToDouble(ChargeAmountTextBox.Text);
        }
        catch
        {
            oChargeItemEntity.ChargeAmount = 0;
        }
        try
        {
            oChargeItemEntity.CApplyLowerLimit = Convert.ToDouble(CApplyLowerLimitTextBox.Text);
        }
        catch
        {
            oChargeItemEntity.CApplyLowerLimit = 0;
        }
        try
        {
            oChargeItemEntity.CApplyHigherLimit = Convert.ToDouble(CApplyHigherLimitTextBox.Text);
        }
        catch
        { oChargeItemEntity.CApplyHigherLimit = 0; }
        if (isPercentageCheckBoxGrid.Checked)
            oChargeItemEntity.ChargeItemType = 1;
        else
            oChargeItemEntity.ChargeItemType = 0;
        oChargeItemEntity.ChargeRemarks = "";
        try
        {
            oChargeItemEntity.ChargePercentage = Convert.ToDouble(ChargePercentageTextBox.Text);
        }
        catch 
        {
            oChargeItemEntity.ChargePercentage = 0;
        }
       
        oChargeItemEntity.ChargeLastModifiedBy = "";

        int i = oChargeInformationDAO.UpdateChargeItem(oChargeItemEntity);
        string message = "";
        GridView1.EditIndex = -1;


        if (i == 1)
            message = "Data Updated Successfully";
        else
            message = "Data Not Updated!";
     
        gridViewBind();
        ScriptManager.RegisterClientScriptBlock(Page, this.GetType(), "MessageBox", "alert('" + message + "')", true);

    }
    protected void GridView1_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {

        oChargeItemEntity = new ChargeItemEntity();
        
        //oChargeItemEntity.ChargeCode = txtChargeCode.Text;
        oChargeItemEntity.ChargeID = Convert.ToInt32(GridView1.DataKeys[e.RowIndex].Value.ToString());
        int i = oChargeInformationDAO.DeleteChargeItem(oChargeItemEntity);

        GridView1.EditIndex = -1;


        string message = "";
        if (i == 1)
            message = "Data Deleted Successfully";
        else
            message = "Data Not Deleted!";
        ScriptManager.RegisterClientScriptBlock(Page, this.GetType(), "MessageBox", "alert('" + message + "')", true);
        gridViewBind();
       

    }

    protected void GridView1_RowEditing(object sender, GridViewEditEventArgs e)
    {

        GridView1.EditIndex = e.NewEditIndex;
        gridViewBind();

        // gvbind();

    }

    private void gridViewBind()
    {
        oChargeInformationDAO= new  ChargeInformationDAO();
        string condition = " order by ChargeID desc";
        DataTable dt = oChargeInformationDAO.GetChargeItem(condition);
        GridView1.DataSource = dt;
        GridView1.DataBind();
    }
    protected void txtNew_Click(object sender, EventArgs e)
    {
        Clear();
    }
    protected void txtNew_Click1(object sender, EventArgs e)
    {
        //txtBranchRemarks.Text = "";
        //txtBranchName.Text = "";
        //txtBranchCode.Text = "";
        //txtBranchAddress.Text = "";
        //txtRoutingCode.Text = "";
    }
    protected void isPercentageCheckBox_CheckedChanged(object sender, EventArgs e)
    {
        if (isPercentageCheckBox.Checked)
        {
            txtChargeParcentage.ReadOnly = false;
            txtChargeAmount.ReadOnly = true;
        }
        else
        {
            txtChargeParcentage.ReadOnly = true;
            txtChargeAmount.ReadOnly = false;
        }
    }
    protected void isPercentageCheckBoxGrid_CheckedChanged(object sender, EventArgs e)
    {
        foreach (GridViewRow row in GridView1.Rows)
        {
            CheckBox isPercentageCheckBoxGrid = (CheckBox)row.FindControl("isPercentageCheckBoxGrid");
            TextBox ChargePercentageTextBox = (TextBox)row.FindControl("ChargePercentageTextBox");
            TextBox ChargeAmountTextBox = (TextBox)row.FindControl("ChargeAmountTextBox");



            if (isPercentageCheckBoxGrid.Checked)
            {
                ChargePercentageTextBox.ReadOnly = false;
                ChargeAmountTextBox.ReadOnly = true;
                ChargeAmountTextBox.Text = "0";
            }
            else
            {
                ChargePercentageTextBox.ReadOnly = true;
                ChargeAmountTextBox.ReadOnly = false;
                ChargePercentageTextBox.Text = "0";
            }
        }
    }
}
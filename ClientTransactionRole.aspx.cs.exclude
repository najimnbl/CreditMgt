using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;

public partial class ClientTransactionRole : System.Web.UI.Page
{

    TransactionRoleDAO oTransactionRoleDAO = new TransactionRoleDAO();
    TransactionRoleEntity oTransactionRoleEntity = new TransactionRoleEntity();


    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            gridViewBind();
        }

    }
    protected void btnBSave_Click(object sender, EventArgs e)
    {

        oTransactionRoleEntity = new TransactionRoleEntity();


        oTransactionRoleEntity.RoleCode = txtRCode.Text;
        oTransactionRoleEntity.RoleDetails = txtRoleName.Text;
        oTransactionRoleEntity.RoleRemarks = RRemarks.Text;
        oTransactionRoleEntity.RoleCreateBy = DateTime.Now.ToShortDateString();
        oTransactionRoleEntity.RoleLastModifiedBy = DateTime.Now.ToShortDateString();


        string condition = " where RoleCode='" + oTransactionRoleEntity.RoleCode + "'";
        DataTable dt = oTransactionRoleDAO.GetTransactionRole(condition);
        string message = "";
        if (dt.Rows.Count == 0)
        {
            int i = oTransactionRoleDAO.InsertTransactionRole(oTransactionRoleEntity);
            if (i == 1)
            {
                message = "Data Inserted Successfully";
                Clear();
            }
            else
                message = "Data Not  Inserted";

        }
        else
        {
            message = "Data Alreay in DataBase";
        }
        ScriptManager.RegisterClientScriptBlock(Page, this.GetType(), "MessageBox", "alert('" + message + "')", true);
        gridViewBind();
    }

    public void Clear()
    {

        txtRCode.Text = "";
        txtRoleName.Text = "";
        RRemarks.Text = "";
    }

    private void gridViewBind()
    {
        TransactionRoleDAO oTransactionRoleDAO = new TransactionRoleDAO();
        string condition = " order by roleCode ASC";
        DataTable dt = oTransactionRoleDAO.GetTransactionRoleView(condition);
        GridView1.DataSource = dt;
        GridView1.DataBind();
    }
    protected void GridView1_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {

        GridView1.PageIndex = e.NewPageIndex;
        gridViewBind();
        //GridView1.DataSource = oCollectionAccount.GetCustomer(Session["brCode"].ToString(), "");
        //GridView1.DataBind();

    }

    protected void GridView1_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
    {

        GridView1.EditIndex = -1;
        gridViewBind();


    }
    protected void GridView1_RowUpdating(object sender, GridViewUpdateEventArgs e)
    {

        ////int customerId = Convert.ToInt32(GridView1.DataKeys[e.RowIndex].Value.ToString());

        ////        //getting row field details
        TextBox txtGRoleId = (TextBox)GridView1.Rows[e.RowIndex].FindControl("roleidTextBox");
        TextBox txtGrolecodetxt = (TextBox)GridView1.Rows[e.RowIndex].FindControl("Grolecodetxt");
        TextBox txtGRoleDetails = (TextBox)GridView1.Rows[e.RowIndex].FindControl("GroleDetailsTxt");
        TextBox txtGroleRemarks = (TextBox)GridView1.Rows[e.RowIndex].FindControl("GroleRemarks");
        

        TransactionRoleEntity oTransactionRoleEntity = new TransactionRoleEntity();


        //oTransactionRoleEntity.RoleId = Convert.ToInt32(txtGRoleId.Text);
        oTransactionRoleEntity.RoleCode = txtGrolecodetxt.Text;
        oTransactionRoleEntity.RoleDetails = txtGRoleDetails.Text;
        oTransactionRoleEntity.RoleRemarks = txtGroleRemarks.Text;
        oTransactionRoleEntity.RoleLastModifiedBy = DateTime.Now.ToString();

        

 
        oTransactionRoleEntity.RoleId = Convert.ToInt32(GridView1.DataKeys[e.RowIndex].Value.ToString());
        int i = oTransactionRoleDAO.UpdateTransactionRole(oTransactionRoleEntity);
        string message = "";
        GridView1.EditIndex = -1;


        if (i == 1)
            message = "Data Updated Successfully";
        else
            message = "Data Not Updated!";

        gridViewBind();
        ScriptManager.RegisterClientScriptBlock(Page, this.GetType(), "MessageBox", "alert('" + message + "')", true);

    }
    protected void GridView1_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {


        oTransactionRoleEntity = new TransactionRoleEntity();


        oTransactionRoleEntity.RoleId = Convert.ToInt32(GridView1.DataKeys[e.RowIndex].Value.ToString());

        int i = oTransactionRoleDAO.DeleteTransactionRole(oTransactionRoleEntity);

        GridView1.EditIndex = -1;


        string message = "";
        if (i == 1)
            message = "Data Deleted Successfully";
        else
            message = "Data Not Deleted!";

        gridViewBind();
        ScriptManager.RegisterClientScriptBlock(Page, this.GetType(), "MessageBox", "alert('" + message + "')", true);

    }

    protected void GridView1_RowEditing(object sender, GridViewEditEventArgs e)
    {

        GridView1.EditIndex = e.NewEditIndex;
        gridViewBind();

        // gvbind();

    }



    protected void GridView1_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            oTransactionRoleDAO = new TransactionRoleDAO();
            oTransactionRoleEntity = new TransactionRoleEntity();
            oTransactionRoleEntity.RoleId = Convert.ToInt32(GridView1.DataKeys[e.Row.RowIndex].Value.ToString());

            string condition = " where RoleId='" + oTransactionRoleEntity.RoleId + "'";

            //DataTable oDatTable=oTransactionRoleDAO(condition);
            //DataTable dt = oChargeInformationDAO.GetChargeItem("");





        }




    }
    protected void txtNew_Click(object sender, EventArgs e)
    {
        Clear();
    }
}
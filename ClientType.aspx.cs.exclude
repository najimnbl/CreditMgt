using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;

public partial class ClientType : System.Web.UI.Page
{
    ClientTypeDAO oClientTypeDAO = new ClientTypeDAO();
    ClientTypeEntity oClientTypeEntity = new ClientTypeEntity();



    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            gridViewBind();
        
    
        }

    }

    protected void btnBSave_Click1(object sender, EventArgs e)
    {

        oClientTypeEntity = new ClientTypeEntity();


        oClientTypeEntity.ClientTypeCode = txtClientTypeCode.Text ;
        oClientTypeEntity.ClientTypeDetais =txtTypeDetails.Text;
        oClientTypeEntity.ClientTypeChargePercentage = Convert.ToInt32(txtCPersentage.Text);
        oClientTypeEntity.ClientTypeRemarks = txtTypeRemarks.Text;
        oClientTypeEntity.ClientTypeCreateBy = DateTime.Now.ToShortDateString();
        oClientTypeEntity.ClientTypeLastModifiedBy = DateTime.Now.ToShortDateString();


        string condition = " where ClientTypeCode='" + oClientTypeEntity.ClientTypeCode + "'";
        DataTable dt = oClientTypeDAO.GetClientType(condition);
        string message = "";
        if (dt.Rows.Count == 0)
        {
            int i = oClientTypeDAO.InsertClientType(oClientTypeEntity);
            if (i == 1)
            {
                message = "Data Inserted Successfully";
                Clear();
            }
            else
                message = "Data Not  Inserted";

        }
        else
        {
            message = "Data Alreay in DataBase";
        }
        ScriptManager.RegisterClientScriptBlock(Page, this.GetType(), "MessageBox", "alert('" + message + "')", true);
        gridViewBind();
    }

    public void Clear()
    {


        txtClientTypeCode.Text = "";
        txtTypeDetails.Text = "";
        txtCPersentage.Text = "";
        txtTypeRemarks.Text ="";

    }

    private void gridViewBind()
    {

        ClientTypeDAO oClientTypeDAO = new ClientTypeDAO();
      
        string condition = " order by ClientTypeCode ASC";
        DataTable dt = oClientTypeDAO.GetClientTypeView(condition);
        GridView1.DataSource = dt;
        GridView1.DataBind();
    }
    protected void GridView1_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {

        GridView1.PageIndex = e.NewPageIndex;
        gridViewBind();
        //GridView1.DataSource = oCollectionAccount.GetCustomer(Session["brCode"].ToString(), "");
        //GridView1.DataBind();

    }

    protected void GridView1_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
    {

        GridView1.EditIndex = -1;
        gridViewBind();


    }
    protected void GridView1_RowUpdating(object sender, GridViewUpdateEventArgs e)
    {

        
        TextBox txtGrClientTypeID = (TextBox)GridView1.Rows[e.RowIndex].FindControl("GrClientTypeID");
        TextBox txtGrClientTypeCode = (TextBox)GridView1.Rows[e.RowIndex].FindControl("GrClientTypeCode");
        TextBox txtGrClientTypeDetais = (TextBox)GridView1.Rows[e.RowIndex].FindControl("GrClientTypeDetais");
        TextBox txtGrChargePercentage = (TextBox)GridView1.Rows[e.RowIndex].FindControl("GrChargePercentage");
        TextBox txtGrClientTypeRemarks = (TextBox)GridView1.Rows[e.RowIndex].FindControl("GrClientTypeRemarks");


        ClientTypeEntity oClientTypeEntity = new ClientTypeEntity();




        //oClientTypeEntity.ClientTypeID = txtGrClientTypeID.Text;
        oClientTypeEntity.ClientTypeCode = txtGrClientTypeCode.Text;
        oClientTypeEntity.ClientTypeDetais = txtGrClientTypeDetais.Text;
        oClientTypeEntity.ClientTypeChargePercentage = Convert.ToInt32(txtGrChargePercentage.Text);
        oClientTypeEntity.ClientTypeRemarks = txtGrClientTypeRemarks.Text;
        oClientTypeEntity.ClientTypeLastModifiedBy = DateTime.Now.ToShortDateString();




        oClientTypeEntity.ClientTypeID = Convert.ToInt32(GridView1.DataKeys[e.RowIndex].Value.ToString());
        int i = oClientTypeDAO.UpdateClientType(oClientTypeEntity);
        string message = "";
        GridView1.EditIndex = -1;


        if (i == 1)
            message = "Data Updated Successfully";
        else
            message = "Data Not Updated!";

        gridViewBind();
        ScriptManager.RegisterClientScriptBlock(Page, this.GetType(), "MessageBox", "alert('" + message + "')", true);

    }
    protected void GridView1_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {





        oClientTypeEntity.ClientTypeID = Convert.ToInt32(GridView1.DataKeys[e.RowIndex].Value.ToString());

        int i = oClientTypeDAO.DeleteClientType(oClientTypeEntity);

        GridView1.EditIndex = -1;


        string message = "";
        if (i == 1)
            message = "Data Deleted Successfully";
        else
            message = "Data Not Deleted!";

        gridViewBind();
        ScriptManager.RegisterClientScriptBlock(Page, this.GetType(), "MessageBox", "alert('" + message + "')", true);

    }

    protected void GridView1_RowEditing(object sender, GridViewEditEventArgs e)
    {

        GridView1.EditIndex = e.NewEditIndex;
        gridViewBind();

        // gvbind();

    }



    protected void GridView1_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            //oTransactionRoleDAO = new TransactionRoleDAO();
            //oTransactionRoleEntity = new TransactionRoleEntity();
            //oTransactionRoleEntity.RoleId = Convert.ToInt32(GridView1.DataKeys[e.Row.RowIndex].Value.ToString());

            //string condition = " where RoleId='" + oTransactionRoleEntity.RoleId + "'";

            //DataTable oDatTable=oTransactionRoleDAO(condition);
            //DataTable dt = oChargeInformationDAO.GetChargeItem("");





        }




    }
    protected void txtNew_Click1(object sender, EventArgs e)
    {
        Clear();
    }


}
using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using System.IO;
using System.Globalization;
using System.Data.SqlClient;
using System.Web.Script.Services;
using System.Web.Services;
using System.Threading;
using System.Text.RegularExpressions;



[System.Web.Script.Services.ScriptService]

public partial class NewUser : System.Web.UI.Page
{
    DbHandler dbh = new DbHandler();

    protected void Page_Load(object sender, EventArgs e)
    {

        //if (!Session["BrCode"].ToString().Contains("0914"))
        //{
        //    Response.Redirect("MainPage.aspx");
        //}




        Lbl_Message.Text = "";

    }




    [WebMethod]
    protected void Btn_Cancel_Click(object sender, EventArgs e)
    {
        resetPage();
        Btn_Save.Text = "Save";
    }

    private void resetPage()
    {
        TxtBox_UserId.Enabled = true;
        TxtBox_UserId.Text = "";
        TxtBox_Password.Attributes.Add("value", "");
        TxtBox_RetypePass.Attributes.Add("value", "");
        TxtBox_EmpName.Text = "";
        Btn_Save.Text = "Save";
        DropDownList_Active.SelectedIndex = 0;
        SqlDataSource_UserDetails.SelectCommand = "SELECT UserInfo.UserId, UserInfo.USER_NM, DesignationInfo.Designation, UserTypeInfo.UserType, UserInfo.Enabled, BranchInfo.BranchName FROM DesignationInfo INNER JOIN UserInfo ON DesignationInfo.DesignationId = UserInfo.DesignationId INNER JOIN UserTypeInfo ON UserInfo.UserTypeId = UserTypeInfo.UserTypeId INNER JOIN BranchInfo ON UserInfo.BrCode = BranchInfo.BrCode WHERE (BranchInfo.BrCode = @BrCode)";
        GridView_NewUser.DataBind();
    }


    [WebMethod]
    protected void Btn_Receive_Click(object sender, EventArgs e)
    {




        if (!Page.IsValid)
        {
            return;
        }
        SqlConnection MySqlConnection = new SqlConnection(ConfigurationManager.ConnectionStrings["MBucketConnectionString"].ToString());
        SqlCommand command = MySqlConnection.CreateCommand();


        try
        {
            MySqlConnection.Open();

            if (TxtBox_UserId.Enabled)
            {
                command.CommandText = "EXEC dbo.AddNewUser '" + TxtBox_UserId.Text.Trim() + "', '" + TxtBox_Password.Text.Trim() + "', " +
                DropDownList_UserType.SelectedValue.ToString() + ", '" + TxtBox_EmpName.Text.Trim() + "', " +
                DropDownList_Designation.SelectedValue.ToString() + ", '" + DropDownList_Br.SelectedValue.ToString() + "', '" +
                DropDownList_Active.SelectedValue.ToString() + "', '" +
                Session["user"].ToString() + "', '" + DateTime.Now + "'";

                command.ExecuteNonQuery();


                Lbl_Message.Text = "User Id <b>" + TxtBox_UserId.Text.Trim() + "</b> created successfully.";
            }
            else
            {
                command.CommandText = "EXEC dbo.UpdateUser '" + TxtBox_UserId.Text.Trim() + "', '" + TxtBox_Password.Text.Trim() + "', " +
                DropDownList_UserType.SelectedValue.ToString() + ", '" + TxtBox_EmpName.Text.Trim() + "', " +
                DropDownList_Designation.SelectedValue.ToString() + ", '" + DropDownList_Br.SelectedValue.ToString() + "', '" +
                DropDownList_Active.SelectedValue.ToString() + "', '" +
                Session["user"].ToString() + "', '" + DateTime.Now + "'";

                command.ExecuteNonQuery();



                Lbl_Message.Text = "User Id <b>" + TxtBox_UserId.Text.Trim() + "</b> updated successfully.";
            }
            resetPage();
        }
        catch (Exception Ex)
        {
            if (Ex.Message.Contains("duplicate"))
            {
                command.CommandText = "EXEC getUserBranchName '" + TxtBox_UserId.Text + "'";
                Lbl_Message.Text = "User exists in " + (String)command.ExecuteScalar();
            }
            else
            {
                Lbl_Message.Text = "Erron " + Ex.Message;
            }

        }
        finally
        {
            MySqlConnection.Close();
        }
    }


    [WebMethod]
    protected void GridView_NewUser_RowCommand(object sender, GridViewCommandEventArgs e)
    {
        if (e.CommandName.Equals("ins_"))
        {
            int index = Convert.ToInt32(e.CommandArgument);
            GridViewRow gvRow = GridView_NewUser.Rows[index];
            DataTable dTable = dbh.GetDataTable("Exec UserInfo4Edit '" + gvRow.Cells[1].Text + "'");

            TxtBox_UserId.Text = gvRow.Cells[1].Text;
            TxtBox_Password.Attributes.Add("value", dTable.Rows[0]["Password"].ToString());
            TxtBox_RetypePass.Attributes.Add("value", dTable.Rows[0]["Password"].ToString());
            TxtBox_EmpName.Text = dTable.Rows[0]["USER_NM"].ToString();
            DropDownList_Br.SelectedIndex = DropDownList_Br.Items.IndexOf(DropDownList_Br.Items.FindByText(dTable.Rows[0]["BranchName"].ToString()));
            DropDownList_Designation.SelectedIndex = DropDownList_Designation.Items.IndexOf(DropDownList_Designation.Items.FindByText(dTable.Rows[0]["Designation"].ToString()));
            DropDownList_UserType.SelectedIndex = DropDownList_UserType.Items.IndexOf(DropDownList_UserType.Items.FindByText(dTable.Rows[0]["UserType"].ToString()));
            DropDownList_Active.SelectedIndex = DropDownList_Active.Items.IndexOf(DropDownList_Active.Items.FindByText(dTable.Rows[0]["Enabled"].ToString()));

            TxtBox_UserId.Enabled = false;
            Btn_Save.Text = "Update";
        }
    }


    [WebMethod]
    protected void DropDownList_Br_SelectedIndexChanged(object sender, EventArgs e)
    {
        NB_BranchCode.Text = DropDownList_Br.SelectedValue.ToString();
        if (TxtBox_UserId.Enabled)
        {
            resetPage();
        }
        else
        {
            SqlDataSource_UserDetails.SelectCommand = "SELECT UserInfo.UserId, UserInfo.EmployeeName, DesignationInfo.Designation, UserTypeInfo.UserType, UserInfo.Enabled, BranchInfo.BranchName FROM DesignationInfo INNER JOIN UserInfo ON DesignationInfo.DesignationId = UserInfo.DesignationId INNER JOIN UserTypeInfo ON UserInfo.UserTypeId = UserTypeInfo.UserTypeId INNER JOIN BranchInfo ON UserInfo.BrCode = BranchInfo.BrCode WHERE (BranchInfo.BrCode = @BrCode)";
            GridView_NewUser.DataBind();
        }

    }
    protected void DropDownList_Br_DataBound(object sender, EventArgs e)
    {
        NB_BranchCode.Text = DropDownList_Br.SelectedValue.ToString();
        SqlDataSource_UserDetails.SelectCommand = "SELECT UserInfo.UserId, UserInfo.USER_NM, DesignationInfo.Designation, UserTypeInfo.UserType, UserInfo.Enabled, BranchInfo.BranchName FROM DesignationInfo INNER JOIN UserInfo ON DesignationInfo.DesignationId = UserInfo.DesignationId INNER JOIN UserTypeInfo ON UserInfo.UserTypeId = UserTypeInfo.UserTypeId INNER JOIN BranchInfo ON UserInfo.BrCode = BranchInfo.BrCode WHERE (BranchInfo.BrCode = @BrCode)";
        GridView_NewUser.DataBind();
    }


    protected void Btn_Serach_Click(object sender, EventArgs e)
    {
        DropDownList_Br.SelectedValue = NB_BranchCode.Text.PadLeft(4, '0');
    }
}
